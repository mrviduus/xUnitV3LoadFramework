name: publish

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: bash  # For sed and conditional logic

jobs:
  publish_nuget_package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Extract version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
          else
            VERSION="1.0.0.${{ github.run_number }}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version set to: $VERSION"

      - name: Update .csproj with Version
        run: |
          sed -i 's|<Version>.*</Version>|<Version>${{ env.VERSION }}</Version>|' src/xUnitV3LoadFramework/xUnitV3LoadFramework.csproj
          echo "Updated version in .csproj to: ${{ env.VERSION }}"

      - name: Install dependencies
        run: >-
          dotnet restore src/xUnitV3LoadFramework/xUnitV3LoadFramework.csproj
          tests/xUnitV3LoadFrameworkTests/xUnitV3LoadFrameworkTests.csproj

      - name: Build
        run: dotnet build tests/xUnitV3LoadFrameworkTests/xUnitV3LoadFrameworkTests.csproj --configuration Release --no-restore

      - name: Run tests
        run: dotnet test tests/xUnitV3LoadFrameworkTests/xUnitV3LoadFrameworkTests.csproj --no-restore --verbosity normal

      - name: Ensure NuGet Directory Exists
        run: mkdir -p "${{ env.NuGetDirectory }}"

      - name: Pack xUnitV3LoadFramework
        run: dotnet pack src/xUnitV3LoadFramework/xUnitV3LoadFramework.csproj --configuration Release --output "${{ env.NuGetDirectory }}"

      - name: Setup NuGet CLI
        uses: NuGet/setup-nuget@v1
        with:
          nuget-version: 'latest'

      - name: Publish to NuGet
        run: dotnet nuget push "${{ env.NuGetDirectory }}/*.nupkg" --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate